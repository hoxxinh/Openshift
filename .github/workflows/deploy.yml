name: Deploy to OpenShift

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install OpenShift CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xvzf oc.tar.gz
          chmod +x oc
          sudo mv oc /usr/local/bin/

      - name: Login to OpenShift
        run: |
          oc login --token=${{ secrets.OPENSHIFT_TOKEN }} --server=https://api.rm2.thpm.p1.openshiftapps.com:6443 --insecure-skip-tls-verify=true

      - name: Set KUBECONFIG
        run: echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Start Build
        run: |
          oc project tnguyen138-dev
          oc start-build openshift-git --follow

      - name: Get Latest Image Tag
        id: get-image-tag
        run: |
          IMAGE_TAG=$(oc get istag openshift-git:latest -o jsonpath='{.image.dockerImageReference}' | awk -F '@' '{print $2}')
          echo "Latest image tag: $IMAGE_TAG"
          echo "::set-output name=image_tag::$IMAGE_TAG"

      - name: Trigger Deployment
        run: |
          # Patch the DeploymentConfig to use the latest image
          oc patch dc/openshift-git -n tnguyen138-dev -p '{"spec":{"template":{"spec":{"containers":[{"name":"openshift-git","image":"image-registry.openshift-image-registry.svc:5000/tnguyen138-dev/openshift-git@'"${{ steps.get-image-tag.outputs.image_tag }}"'}]}}}}'